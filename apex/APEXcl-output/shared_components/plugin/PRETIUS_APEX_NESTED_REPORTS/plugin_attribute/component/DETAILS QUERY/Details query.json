{
  "scope": null,
  "attribute": 1,
  "label": "Details query",
  "type": "SQL Query",
  "required": "Yes",
  "common": "Yes",
  "showInWizard": "Yes",
  "defaultValue": null,
  "displayWidth": null,
  "maximumLength": null,
  "unit": null,
  "minimumColumns": null,
  "maximumColumns": null,
  "dataTypes": null,
  "parentAttributeId": null,
  "lovType": null,
  "lovComponentTypeId": null,
  "onDeleteBehavior": null,
  "setTextCase": null,
  "lovNullText": null,
  "userInterface": null,
  "supportedComponentTypes": null,
  "translatable": "No",
  "dependingOn": null,
  "alwaysEvaluate": null,
  "conditionType": null,
  "expression": null,
  "includeColumnsInItemsPicker": "Component",
  "examples": "<h4>\n  Referencing affected report column\n</h4>\n<p>\n  Affected report query (Classic report)\n</p>  \n<pre>\nselect\n  ORDER_ID,\n  CUSTOMER_ID as CUST_ID,\n  ORDER_TOTAL,\n  TAGS\nfrom\n  DEMO_ORDERS\n</pre>\n<p>\n  Details query might look like  \n</p>  \n<pre>\nselect\n  CUSTOMER_ID,\n  CUST_FIRST_NAME as \"First name\",\n  CUST_LAST_NAME,\n  PHONE_NUMBER1,\n  CREDIT_LIMIT\nfrom\n  DEMO_CUSTOMERS\nwhere\n  customer_id = #CUST_ID#\n</pre>\n<p>\n  The plugin will replace #CUST_ID# with value of the column CUST_ID within affected report.\n</p>  \n\n<h4>\n  Referencing not visible columns\n</h4>\n<p>\n  When column in report has \"Type\" = \"Hidden\" it is not rendered in report and can't be referenced by the plugin. To reference such column, its value has to be provided within visible column.\n</p>\n<p>\n  In Classic report are defined columns\n</p>\n<ul>\n  <li>column CUSTOMER_ID, Type = \"Hidden\"</li>\n  <li>column CUSTOMER, Type = \"Plain Text\"</li>\n</ul>\n<p>\n  Column CUSTOMER is visible and can contain CUSTOMER_ID value. To do so go to section Column Formatting > HTML Expression and enter HTML:\n</p>\n<pre>\n<span class=\"CUSTOMER_ID\" style=\"display:none\">#CUSTOMER_ID#</span>#CUSTOMER#  \n</pre>",
  "helpText": "<p>\n  Enter valid SQL query that returns at least one row. Fetched data is rendered in default or custom template depending on the plugin configuration.\n</p>\n<h4>\n  Narrowing results\n</h4>\n<p>\n  Condition value(s) should be column(s) name(s) from parent region enclosed by # characters (or parent report column aliases if used).\n</p>\n<pre>\n...\nwhere\n  COLUMN_ID = '#COLUMN_ID#'\n</pre>\n<h4>\n  How does it work?\n</h4>\n<p>\n  When column name is enclosed by <code>#</code> characters and dynamic action is triggered, the plugin scans triggering element table row for DOM elements matching one of following jQuery selectors:\n</p>\n<pre>\n$('[headers=\"COLUMN_ID\"]').text() or\n$('[headers=\"NR_COLUMN_ID\"]').text() or\n$('span[class*=\"COLUMN_ID\"]').text()\n</pre>\n<p>\n  It means that the plugin looks for value from GUI witin\n</p>\n<ul>\n  <li>TD element with header attribute set to <code>COLUMN_ID</code> (Classic report, Interactive report) or</li>\n  <li>TD element with header attribute set to <code>NR_COLUMN_ID</code> (Nested reports) or</li>\n  <li>span element with class COLUMN_ID (universal)</li>\n</ul>\n<p>\n  The text value from matched element is used to replace #COLUMN_ID# in details row attribute.\n</p>\n<p>\n  The safest way of binding GUI report with the plugin query is to use \n</p>\n<pre><code><span class=\"COLUMN_NAME\" style=\"display:none\">#COLUMN_NAME#</span></code></pre>\n<p>\n  next to nested report's triggering element (e.g. anchor).\n</p>\n<h4>\n  Custom columns heading\n</h4>\n<p>\n  Custom column headings can be used in <code>Default template</code>.\n</p>\n<ul>\n  <li>To create nested report with empty heading use column alias <code>DERIVIED<XX>_EMPTY</code> </li>\n  <li>To create nested report with font awesome icon heading use column alias <code>DERIVIED<XX>_FA_<NAME></code> </li>\n</ul>   \n<p>\n  where \n</p>\n<ul>\n  <li><XX> is 2 digits string e.g. 01</li>\n  <li><NAME> is icon class name with \"_\" instead of \"-\" (e.g. SEARCH or SITE_MAP)</li>\n</ul>",
  "comment": null
}